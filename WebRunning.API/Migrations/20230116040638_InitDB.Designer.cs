// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebRunning.API.Infrastructure;

namespace WebRunning.API.Migrations
{
    [DbContext(typeof(DomainDbContext))]
    [Migration("20230116040638_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WebRunning.API.Model.Por_Anh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdNhomAnh")
                        .HasColumnType("uuid");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Ten")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("URL_Anh")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_Anhs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_ChiTietGioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("GiaTien")
                        .HasColumnType("double precision");

                    b.Property<Guid>("IdKhoaHoc")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_ChiTietGioHangs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_GiaoVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ChungChi")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("boolean");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("NgaySinh")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Ten")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("ThanhTich")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("URLAnhDaiDien")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_GiaoVien");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("HoVaTenNguoiMua")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("NgayThanhToan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Sdt")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("SoLuongKhoaHoc")
                        .HasColumnType("integer");

                    b.Property<string>("TaiKhoan")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<double>("TongThanhToan")
                        .HasColumnType("double precision");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("XacNhanDonHang")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Por_GioHangs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_KhoaHoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("GiaTien")
                        .HasColumnType("double precision");

                    b.Property<double>("HocPhiGiamGia")
                        .HasColumnType("double precision");

                    b.Property<double>("HocPhiGoc")
                        .HasColumnType("double precision");

                    b.Property<Guid>("IdGiaoVien")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdMonHoc")
                        .HasColumnType("uuid");

                    b.Property<string>("MoTa")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("ThoiGianHoc")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("URL_AnhDaiDien")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_KhoaHocs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdMenuCha")
                        .HasColumnType("uuid");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Ten")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("integer");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("URL")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_Menus");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_MonHoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GiaGiaoDong")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("IdMonHocCha")
                        .HasColumnType("uuid");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ten")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("URL_AnhDaiDien")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_MonHocs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_NhomAnh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Ten")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_NhomAnhs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_NhomSuKien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdNhomSuKienCha")
                        .HasColumnType("uuid");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Ten")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_NhomSuKiens");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_NhomTinTuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdNhomTinTucCha")
                        .HasColumnType("uuid");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Ten")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_NhomTinTucs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_SuKien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("GiaTien")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("IdNhomSuKien")
                        .HasColumnType("uuid");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ten")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTimeOffset>("ThoiGian")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TrangThai")
                        .HasColumnType("integer");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("URL_AnhDaiDien")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_SuKiens");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_ThongTinChuyenKhoan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ChuThe")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDungChuyenKhoan")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<string>("SoTaiKhoan")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<string>("TenNganhang")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("URL_AnhQRCode")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_ThongTinChuyenKhoans");
                });

            modelBuilder.Entity("WebRunning.API.Model.Por_TinTuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdNhomTinTuc")
                        .HasColumnType("uuid");

                    b.Property<int>("LuotXem")
                        .HasColumnType("integer");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTimeOffset>("NgayXuatBan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("TacGia")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("TinMoi")
                        .HasColumnType("boolean");

                    b.Property<bool>("TinNoiBat")
                        .HasColumnType("boolean");

                    b.Property<bool>("TrangThaiBanGhi")
                        .HasColumnType("boolean");

                    b.Property<string>("URL_AnhDaiDien")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_TinTucs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_AuthToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefeshToken")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Authtokens");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Categories");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Configs");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extension")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObjectType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Files");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DetailsURL")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObjectType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Receiver")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Notification");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Organizations");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsFunc")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Permissions");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Icon")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Url")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Resources");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Roles");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("FullName")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("PassWord")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Users");
                });

            modelBuilder.Entity("WebRunning.API.Model.Sys_User_Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrganId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Sys_Users_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
